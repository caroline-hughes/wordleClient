#!/usr/bin/env python3
import sys, argparse, logging, random, socket, json

def sendMessage(s: socket, m: object):
  print('\nsending:', m)
  msg = (json.dumps(m) + "\n").encode()
  totalsent = 0
  while totalsent < len(msg):
      sent = s.send(msg[totalsent:])
      if sent == 0:
          raise RuntimeError("socket connection broken")
      totalsent = totalsent + sent
  # print("totalsent=", totalsent)

def receieveMessage(s):
  # print('\nreceiving...')
  buffer = ''
  try:
      while "\n" not in buffer: 
          data = s.recv(1024).decode('utf-8')
          # print("data =", data)
          if not data:
              print("no more data to receive")
              break
          buffer += data
  except Exception as loopException:
      print("Exception occurred in loop, exiting...", loopException)

  res = json.loads(buffer)
  print('\nreceived:', res)
  if res['type'] != 'start' and res['type'] != 'retry' and res['type'] != 'bye' and res['type'] != 'error':
    print("\nrecieved invalid message type! closing connection\n")

  return res



# until res type == bye (for testing: for 5 rounds)
  # pick a random work to guess
  # get res
def runGuessLoop(s, id):
  words = ['bluff', 'cheek', 'kitty', 'throw', 'steer']
  count = 0
  while count < 5:  # while res['type'] != 'bye' :
    # GUESS
    guess = {"type": "guess", "id": id, "word": words[count]}
    sendMessage(s, guess) # send first guess
    count += 1

    # LISTEN
    try:
      res = receieveMessage(s) # listen for response to guess
    except:
      print('\ncouldnt get guess res')
    
  # print('\nyay i won')
  # print('\nflag:', res['flag'])


# play wordle baby!!!!
def client(args, loglevel):
  logging.basicConfig(format="%(levelname)s: %(message)s", level=loglevel)

  # print(args)
  # print('Number of arguments:', len(sys.argv), 'arguments.')
  # print('Argument List:', str(sys.argv))
  # useTLS = bool(args.tls)
  # host = str(args.hostname)
  # port = int(args.p)  

  # hard code for now
  host = "proj1.3700.network"
  port = 27993 
  # tlsPort = 27994

  # create an INET, STREAMing socket
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.connect((host, port))

  # HELLO
  try:
    hello = {"type": "hello", "northeastern_username": "hughes.ca"}
    sendMessage(s, hello)
  except:
    print('\ncouldnt send first msg')

  # START
  try:  
    connectionID = receieveMessage(s)['id']
  except:
    print('\ncouldnt get start res')

  # GUESS LOOP
  try:
    runGuessLoop(s, connectionID)
  except:
    print('\nguess loop exception')

  print("\n")







if __name__ == '__main__':
  parser = argparse.ArgumentParser(description='Lets play wordle.')
  parser.add_argument('-s', dest='tls', action='store_true')
  parser.set_defaults(tls=False)
  parser.add_argument(
                      "-p",
                      metavar="PORT",
                      default=27993,
                      help="pass -p with your TLS port")

  # specifies the name of the server (either a DNS name or an IP address in dotted notation)
  parser.add_argument('hostname', metavar='hostname', type=str, nargs=1,
                    help='the hostname')

  parser.add_argument('Northeastern-username', metavar='username', type=str, nargs=1,
                    help='your Northeastern username')
  args = parser.parse_args()
  
  loglevel = logging.INFO
  
  client(args, loglevel)